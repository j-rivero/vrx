name: Release to ghrc.io

on:
  push:
    tags:
      - "v*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      # Uses the `docker/login-action` action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # This step uses [docker/metadata-action](https://github.com/docker/metadata-action#about) to extract tags and labels that will be applied to the specified image. The `id` "meta" allows the output of this step to be referenced in a subsequent step. The `images` value provides the base name for the tags and labels.
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Docker compose build and push
        id: docker-build-push
        run: |
          cd docker
          # Define image types in an array
          IMAGE_TYPES=("base")

          # Build images
          docker compose -f docker-compose.yml build ${IMAGE_TYPES[@]}

          # Tag and push images
          for type in "${IMAGE_TYPES[@]}"; do
          # Tag latest and version
            docker tag vrx-${type}:latest ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${type}:latest
            docker tag vrx-${type}:latest ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${type}:${{ github.ref_name }}
            
            docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${type}:latest
            docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${type}:${{ github.ref_name }}

            digest=$(docker inspect --format='{{index .RepoDigests 0}}' vrx-${type}:latest)
            #remove the registry and image name from the digest
            digest=${digest#${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${type}@}

            # export disgest as output variable named with the image type, one for each image
            echo "${type}_digest=${digest}" >> $GITHUB_ENV
          done
      # Print the digest of the base image from outputs
      - name: Print base image digest
        run: |
          echo "Base image digest: ${{ steps.docker-build-push.outputs.base_digest }}"

      - name: Attest
        uses: actions/attest-build-provenance@v2
        id: attest
        with:
           subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-base
           subject-digest: ${{ steps.docker-build-push.outputs.base_digest }}
